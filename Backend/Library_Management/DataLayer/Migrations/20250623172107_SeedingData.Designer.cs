// <auto-generated />
using System;
using DataLayer.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ProjectPrn232Context))]
    [Migration("20250623172107_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Entities.Author", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("author_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__authors__3213E83F45E5F6A6");

                    b.ToTable("authors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AuthorName = "Stephen King",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "2",
                            AuthorName = "J.K. Rowling",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "3",
                            AuthorName = "George R.R. Martin",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "4",
                            AuthorName = "Agatha Christie",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "5",
                            AuthorName = "Haruki Murakami",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "6",
                            AuthorName = "Nguyễn Nhật Ánh",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "7",
                            AuthorName = "Tô Hoài",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "8",
                            AuthorName = "Dương Thụy",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "9",
                            AuthorName = "Trang Hạ",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "10",
                            AuthorName = "Nguyễn Phong Sắc",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("AuthorId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("author_id");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_url");

                    b.Property<short?>("PublicationYear")
                        .HasColumnType("smallint")
                        .HasColumnName("publication_year");

                    b.Property<string>("PublisherId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("publisher_id");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__books__3213E83F961658F9");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "book_01_shining",
                            AuthorId = "1",
                            CategoryId = "1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Horror novel by Stephen King.",
                            ImageUrl = "https://example.com/shining.jpg",
                            PublicationYear = (short)1977,
                            PublisherId = "1",
                            Status = "Available",
                            Title = "The Shining",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_02_hp",
                            AuthorId = "2",
                            CategoryId = "4",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "First book in the Harry Potter series.",
                            ImageUrl = "https://example.com/hp1.jpg",
                            PublicationYear = (short)1997,
                            PublisherId = "2",
                            Status = "Available",
                            Title = "Harry Potter and the Sorcerer's Stone",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_03_got",
                            AuthorId = "3",
                            CategoryId = "4",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "First book of A Song of Ice and Fire.",
                            ImageUrl = "https://example.com/got.jpg",
                            PublicationYear = (short)1996,
                            PublisherId = "3",
                            Status = "Available",
                            Title = "A Game of Thrones",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_04_none",
                            AuthorId = "4",
                            CategoryId = "6",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Classic mystery novel.",
                            ImageUrl = "https://example.com/agatha.jpg",
                            PublicationYear = (short)1939,
                            PublisherId = "4",
                            Status = "Available",
                            Title = "And Then There Were None",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_05_norwegian",
                            AuthorId = "5",
                            CategoryId = "1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Coming-of-age novel by Haruki Murakami.",
                            ImageUrl = "https://example.com/norwegian.jpg",
                            PublicationYear = (short)1987,
                            PublisherId = "5",
                            Status = "Available",
                            Title = "Norwegian Wood",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_06_hoavang",
                            AuthorId = "6",
                            CategoryId = "1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tiểu thuyết của Nguyễn Nhật Ánh.",
                            ImageUrl = "https://example.com/hoavang.jpg",
                            PublicationYear = (short)2010,
                            PublisherId = "6",
                            Status = "Available",
                            Title = "Tôi Thấy Hoa Vàng Trên Cỏ Xanh",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_07_demen",
                            AuthorId = "7",
                            CategoryId = "1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Truyện thiếu nhi kinh điển.",
                            ImageUrl = "https://example.com/demen.jpg",
                            PublicationYear = (short)1941,
                            PublisherId = "7",
                            Status = "Available",
                            Title = "Dế Mèn Phiêu Lưu Ký",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_08_hoacuc",
                            AuthorId = "8",
                            CategoryId = "7",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tập truyện ngắn lãng mạn.",
                            ImageUrl = "https://example.com/hoacuc.jpg",
                            PublicationYear = (short)2008,
                            PublisherId = "9",
                            Status = "Available",
                            Title = "Đi Qua Hoa Cúc",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_09_tinhyv",
                            AuthorId = "9",
                            CategoryId = "7",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tản văn về tình yêu.",
                            ImageUrl = "https://example.com/tinhyv.jpg",
                            PublicationYear = (short)2007,
                            PublisherId = "10",
                            Status = "Available",
                            Title = "Cho Một Tình Yêu",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_10_tatden",
                            AuthorId = "10",
                            CategoryId = "3",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Tiểu thuyết hiện thực phê phán.",
                            ImageUrl = "https://example.com/tatden.jpg",
                            PublicationYear = (short)1937,
                            PublisherId = "11",
                            Status = "Available",
                            Title = "Tắt Đèn",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.BookCopy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("book_id");

                    b.Property<string>("CopyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("copy_code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__book_cop__3213E83F25D02A04");

                    b.HasIndex("BookId");

                    b.HasIndex(new[] { "CopyCode" }, "UQ__book_cop__5196394F6914230C")
                        .IsUnique();

                    b.ToTable("book_copies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "book_copy_1",
                            BookId = "book_01_shining",
                            CopyCode = "CP-01-01",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_2",
                            BookId = "book_01_shining",
                            CopyCode = "CP-01-02",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_3",
                            BookId = "book_02_hp",
                            CopyCode = "CP-02-03",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_4",
                            BookId = "book_02_hp",
                            CopyCode = "CP-02-04",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_5",
                            BookId = "book_03_got",
                            CopyCode = "CP-03-05",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_6",
                            BookId = "book_03_got",
                            CopyCode = "CP-03-06",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_7",
                            BookId = "book_04_none",
                            CopyCode = "CP-04-07",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_8",
                            BookId = "book_04_none",
                            CopyCode = "CP-04-08",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_9",
                            BookId = "book_05_norwegian",
                            CopyCode = "CP-05-09",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_10",
                            BookId = "book_05_norwegian",
                            CopyCode = "CP-05-10",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_11",
                            BookId = "book_06_hoavang",
                            CopyCode = "CP-06-11",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_12",
                            BookId = "book_06_hoavang",
                            CopyCode = "CP-06-12",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_13",
                            BookId = "book_07_demen",
                            CopyCode = "CP-07-13",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_14",
                            BookId = "book_07_demen",
                            CopyCode = "CP-07-14",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_15",
                            BookId = "book_08_hoacuc",
                            CopyCode = "CP-08-15",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_16",
                            BookId = "book_08_hoacuc",
                            CopyCode = "CP-08-16",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_17",
                            BookId = "book_09_tinhyv",
                            CopyCode = "CP-09-17",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_18",
                            BookId = "book_09_tinhyv",
                            CopyCode = "CP-09-18",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_19",
                            BookId = "book_10_tatden",
                            CopyCode = "CP-10-19",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "book_copy_20",
                            BookId = "book_10_tatden",
                            CopyCode = "CP-10-20",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Available",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.BookFavorite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("added_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("book_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__book_fav__3213E83F055FA27C");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("book_favorites", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AddedAt = new DateTime(2023, 12, 2, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_01_shining",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "2",
                            AddedAt = new DateTime(2023, 12, 7, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_02_hp",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        },
                        new
                        {
                            Id = "3",
                            AddedAt = new DateTime(2023, 12, 12, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_03_got",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "5"
                        },
                        new
                        {
                            Id = "4",
                            AddedAt = new DateTime(2023, 12, 14, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_04_none",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "6"
                        },
                        new
                        {
                            Id = "5",
                            AddedAt = new DateTime(2023, 12, 17, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_05_norwegian",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "7"
                        },
                        new
                        {
                            Id = "6",
                            AddedAt = new DateTime(2023, 12, 20, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_06_hoavang",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "8"
                        },
                        new
                        {
                            Id = "7",
                            AddedAt = new DateTime(2023, 12, 22, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_07_demen",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "9"
                        },
                        new
                        {
                            Id = "8",
                            AddedAt = new DateTime(2023, 12, 24, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_08_hoacuc",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "10"
                        },
                        new
                        {
                            Id = "9",
                            AddedAt = new DateTime(2023, 12, 25, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_09_tinhyv",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "10",
                            AddedAt = new DateTime(2023, 12, 27, 10, 0, 0, 0, DateTimeKind.Utc),
                            BookId = "book_10_tatden",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.BookReservation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("CopyId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("copy_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("ReservationDate")
                        .HasColumnType("date")
                        .HasColumnName("reservation_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__book_res__3213E83FE1B198C7");

                    b.HasIndex("CopyId");

                    b.HasIndex("UserId");

                    b.ToTable("book_reservations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CopyId = "book_copy_1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 1),
                            Status = "Pending",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "2",
                            CopyId = "book_copy_2",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 2),
                            Status = "Pending",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        },
                        new
                        {
                            Id = "3",
                            CopyId = "book_copy_3",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 3),
                            Status = "Pending",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "5"
                        },
                        new
                        {
                            Id = "4",
                            CopyId = "book_copy_4",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 4),
                            Status = "Fulfilled",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "6"
                        },
                        new
                        {
                            Id = "5",
                            CopyId = "book_copy_5",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 5),
                            Status = "Pending",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "7"
                        },
                        new
                        {
                            Id = "6",
                            CopyId = "book_copy_6",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 6),
                            Status = "Fulfilled",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "8"
                        },
                        new
                        {
                            Id = "7",
                            CopyId = "book_copy_7",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 7),
                            Status = "Pending",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "9"
                        },
                        new
                        {
                            Id = "8",
                            CopyId = "book_copy_8",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 8),
                            Status = "Fulfilled",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "10"
                        },
                        new
                        {
                            Id = "9",
                            CopyId = "book_copy_9",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 9),
                            Status = "Pending",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "10",
                            CopyId = "book_copy_10",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReservationDate = new DateOnly(2025, 6, 10),
                            Status = "Fulfilled",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.BookReview", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("book_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("review_date")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("ReviewText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("review_text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__book_rev__3213E83F10A2D67B");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("book_reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            BookId = "book_01_shining",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 12, 4, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Amazing horror story, a classic!",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "2",
                            BookId = "book_02_hp",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 12, 10, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "A magical start to a fantastic series!",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        },
                        new
                        {
                            Id = "3",
                            BookId = "book_03_got",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 12, 13, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Complex characters and intriguing plot.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "5"
                        },
                        new
                        {
                            Id = "4",
                            BookId = "book_04_none",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 12, 16, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "A masterpiece of mystery, highly recommend.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "6"
                        },
                        new
                        {
                            Id = "5",
                            BookId = "book_05_norwegian",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 12, 19, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Murakami never disappoints, a unique read.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "7"
                        },
                        new
                        {
                            Id = "6",
                            BookId = "book_06_hoavang",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 12, 21, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Cuốn sách rất ý nghĩa và đầy cảm xúc.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "8"
                        },
                        new
                        {
                            Id = "7",
                            BookId = "book_07_demen",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 12, 23, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Kỷ niệm tuổi thơ với Dế Mèn.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "9"
                        },
                        new
                        {
                            Id = "8",
                            BookId = "book_08_hoacuc",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 12, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Truyện ngắn lãng mạn nhẹ nhàng.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "10"
                        },
                        new
                        {
                            Id = "9",
                            BookId = "book_09_tinhyv",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 4,
                            ReviewDate = new DateTime(2023, 12, 28, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Đọc để thấy tình yêu thật đẹp.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "10",
                            BookId = "book_10_tatden",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            ReviewDate = new DateTime(2023, 12, 30, 10, 0, 0, 0, DateTimeKind.Utc),
                            ReviewText = "Phản ánh xã hội sâu sắc.",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.BorrowRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("borrow_date");

                    b.Property<string>("CopyId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("copy_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("due_date");

                    b.Property<int>("ExtensionDateCount")
                        .HasColumnType("int");

                    b.Property<decimal>("Fine")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("fine");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("return_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__borrow_r__3213E83F6ECCAA08");

                    b.HasIndex("CopyId");

                    b.HasIndex("UserId");

                    b.ToTable("borrow_records", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            BorrowDate = new DateTime(2023, 12, 22, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_4",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2023, 12, 29, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 5.00m,
                            ReturnDate = new DateTime(2023, 12, 27, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Returned",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "6"
                        },
                        new
                        {
                            Id = "2",
                            BorrowDate = new DateTime(2023, 12, 17, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_6",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2023, 12, 24, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            ReturnDate = new DateTime(2023, 12, 22, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Returned",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "8"
                        },
                        new
                        {
                            Id = "3",
                            BorrowDate = new DateTime(2023, 12, 12, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_8",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2023, 12, 19, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            ReturnDate = new DateTime(2023, 12, 17, 10, 0, 0, 0, DateTimeKind.Utc),
                            Status = "Returned",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "10"
                        },
                        new
                        {
                            Id = "4",
                            BorrowDate = new DateTime(2023, 12, 27, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2024, 1, 3, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            Status = "Borrowed",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "5",
                            BorrowDate = new DateTime(2023, 12, 25, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_2",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            Status = "Borrowed",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        },
                        new
                        {
                            Id = "6",
                            BorrowDate = new DateTime(2023, 12, 30, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_3",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2024, 1, 6, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            Status = "Borrowed",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "5"
                        },
                        new
                        {
                            Id = "7",
                            BorrowDate = new DateTime(2023, 12, 31, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_5",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2024, 1, 7, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            Status = "Borrowed",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "7"
                        },
                        new
                        {
                            Id = "8",
                            BorrowDate = new DateTime(2023, 12, 29, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_7",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2024, 1, 5, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            Status = "Borrowed",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "9"
                        },
                        new
                        {
                            Id = "9",
                            BorrowDate = new DateTime(2023, 12, 28, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_9",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2024, 1, 4, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            Status = "Borrowed",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "3"
                        },
                        new
                        {
                            Id = "10",
                            BorrowDate = new DateTime(2023, 12, 26, 10, 0, 0, 0, DateTimeKind.Utc),
                            CopyId = "book_copy_10",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            DueDate = new DateTime(2024, 1, 2, 10, 0, 0, 0, DateTimeKind.Utc),
                            ExtensionDateCount = 0,
                            Fine = 0.00m,
                            Status = "Borrowed",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UserId = "4"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("category_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__categori__3213E83FBB1165BA");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CategoryName = "Fiction",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "2",
                            CategoryName = "Science",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "3",
                            CategoryName = "History",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "4",
                            CategoryName = "Fantasy",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "5",
                            CategoryName = "Biography",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "6",
                            CategoryName = "Mystery",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "7",
                            CategoryName = "Romance",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "9",
                            CategoryName = "Technology",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "10",
                            CategoryName = "Art",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "11",
                            CategoryName = "Travel",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateOnly>("EventDate")
                        .HasColumnType("date")
                        .HasColumnName("event_date");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("event_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__events__3213E83F433374A8");

                    b.ToTable("events", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Grand opening ceremony of the new library.",
                            EventDate = new DateOnly(2023, 1, 15),
                            EventName = "Library Grand Opening",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "2",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Annual book fair with discounted books.",
                            EventDate = new DateOnly(2023, 3, 10),
                            EventName = "Book Fair 2023",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "3",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Meet and greet session with author Stephen King.",
                            EventDate = new DateOnly(2023, 5, 20),
                            EventName = "Author Meet & Greet: Stephen King",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "4",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Reading challenge for students during summer.",
                            EventDate = new DateOnly(2023, 6, 1),
                            EventName = "Summer Reading Challenge",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "5",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Weekly story time for young children.",
                            EventDate = new DateOnly(2023, 7, 5),
                            EventName = "Children's Story Time",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "6",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Workshop on improving digital literacy skills.",
                            EventDate = new DateOnly(2023, 8, 12),
                            EventName = "Digital Literacy Workshop",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "7",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Open mic night for poetry enthusiasts.",
                            EventDate = new DateOnly(2023, 9, 15),
                            EventName = "Poetry Slam Night",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "8",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Discussion on the history of the local area.",
                            EventDate = new DateOnly(2023, 10, 26),
                            EventName = "Local History Talk",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "9",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Spooky stories for Halloween.",
                            EventDate = new DateOnly(2023, 10, 31),
                            EventName = "Halloween Story Night",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "10",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Collecting books for donation during winter.",
                            EventDate = new DateOnly(2023, 12, 1),
                            EventName = "Winter Book Drive",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Publisher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("publisher_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__publishe__3213E83F7237A8CE");

                    b.ToTable("publishers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "New York, USA",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Penguin Random House",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "2",
                            Address = "New York, USA",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "HarperCollins",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "3",
                            Address = "New York, USA",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Simon & Schuster",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "4",
                            Address = "Paris, France",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Hachette Livre",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "5",
                            Address = "London, UK",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Macmillan Publishers",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "6",
                            Address = "Hanoi, Vietnam",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Kim Đồng Publishing House",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "7",
                            Address = "Hanoi, Vietnam",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Nhã Nam",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "9",
                            Address = "Hanoi, Vietnam",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Alpha Books",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "10",
                            Address = "Ho Chi Minh City, Vietnam",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "Fahasa",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "11",
                            Address = "Ho Chi Minh City, Vietnam",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            PublisherName = "First News",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("role_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__roles__3213E83F9E4EC569");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            RoleName = 0,
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "2",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            RoleName = 1,
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = "3",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            RoleName = 2,
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<int?>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_url");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("RoleId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("role_id");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F4305DF6D");

                    b.HasIndex("RoleId");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            PasswordHash = "hashed_password_admin",
                            RoleId = "1",
                            StudentCode = "admin",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "adminuser"
                        },
                        new
                        {
                            Id = "2",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "lib@example.com",
                            PasswordHash = "hashed_password_lib",
                            RoleId = "2",
                            StudentCode = "librarian",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "librarianuser"
                        },
                        new
                        {
                            Id = "3",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "stu1@example.com",
                            PasswordHash = "hashed_password_stu1",
                            RoleId = "3",
                            StudentCode = "ST001",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "student1"
                        },
                        new
                        {
                            Id = "4",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "stu2@example.com",
                            PasswordHash = "hashed_password_stu2",
                            RoleId = "3",
                            StudentCode = "ST002",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "student2"
                        },
                        new
                        {
                            Id = "5",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "stu3@example.com",
                            PasswordHash = "hashed_password_stu3",
                            RoleId = "3",
                            StudentCode = "ST003",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "student3"
                        },
                        new
                        {
                            Id = "6",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "john.doe@example.com",
                            PasswordHash = "hashed_password_jd",
                            RoleId = "3",
                            StudentCode = "ST004",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "john.doe"
                        },
                        new
                        {
                            Id = "7",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "jane.smith@example.com",
                            PasswordHash = "hashed_password_js",
                            RoleId = "3",
                            StudentCode = "ST005",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "jane.smith"
                        },
                        new
                        {
                            Id = "8",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "peter.jones@example.com",
                            PasswordHash = "hashed_password_pj",
                            RoleId = "3",
                            StudentCode = "ST006",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "peter.jones"
                        },
                        new
                        {
                            Id = "9",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "alice.brown@example.com",
                            PasswordHash = "hashed_password_ab",
                            RoleId = "3",
                            StudentCode = "ST007",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "alice.brown"
                        },
                        new
                        {
                            Id = "10",
                            CreatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Email = "bob.white@example.com",
                            PasswordHash = "hashed_password_bw",
                            RoleId = "3",
                            StudentCode = "ST008",
                            UpdatedAt = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Utc),
                            Username = "bob.white"
                        });
                });

            modelBuilder.Entity("DataLayer.Entities.Book", b =>
                {
                    b.HasOne("DataLayer.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK_books_authors");

                    b.HasOne("DataLayer.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_books_categories");

                    b.HasOne("DataLayer.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .HasConstraintName("FK_books_publishers");

                    b.Navigation("Author");

                    b.Navigation("Category");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("DataLayer.Entities.BookCopy", b =>
                {
                    b.HasOne("DataLayer.Entities.Book", "Book")
                        .WithMany("BookCopies")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK_book_copies_books");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("DataLayer.Entities.BookFavorite", b =>
                {
                    b.HasOne("DataLayer.Entities.Book", "Book")
                        .WithMany("BookFavorites")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK_book_favorites_books");

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("BookFavorites")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_book_favorites_users");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Entities.BookReservation", b =>
                {
                    b.HasOne("DataLayer.Entities.BookCopy", "Copy")
                        .WithMany("BookReservations")
                        .HasForeignKey("CopyId")
                        .IsRequired()
                        .HasConstraintName("FK_book_reservations_book_copies");

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("BookReservations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_book_reservations_users");

                    b.Navigation("Copy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Entities.BookReview", b =>
                {
                    b.HasOne("DataLayer.Entities.Book", "Book")
                        .WithMany("BookReviews")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("FK_book_reviews_books");

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("BookReviews")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_book_reviews_users");

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Entities.BorrowRecord", b =>
                {
                    b.HasOne("DataLayer.Entities.BookCopy", "Copy")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("CopyId")
                        .IsRequired()
                        .HasConstraintName("FK_borrow_records_book_copies");

                    b.HasOne("DataLayer.Entities.User", "User")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_borrow_records_users");

                    b.Navigation("Copy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.HasOne("DataLayer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_users_roles");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataLayer.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataLayer.Entities.Book", b =>
                {
                    b.Navigation("BookCopies");

                    b.Navigation("BookFavorites");

                    b.Navigation("BookReviews");
                });

            modelBuilder.Entity("DataLayer.Entities.BookCopy", b =>
                {
                    b.Navigation("BookReservations");

                    b.Navigation("BorrowRecords");
                });

            modelBuilder.Entity("DataLayer.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataLayer.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DataLayer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataLayer.Entities.User", b =>
                {
                    b.Navigation("BookFavorites");

                    b.Navigation("BookReservations");

                    b.Navigation("BookReviews");

                    b.Navigation("BorrowRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
